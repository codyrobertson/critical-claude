{
  "permissions": {
    "allow": [
      "Bash(git init:*)",
      "mcp__exa-search__web_search_exa",
      "mcp__exa-search__github_search_exa",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(npx @modelcontextprotocol/create-server:*)",
      "Bash(npm install)",
      "Bash(npm install:*)",
      "Bash(npm run build:*)",
      "Bash(npm run inspector:*)",
      "Bash(npx @modelcontextprotocol/inspector build/index.js)",
      "Bash(pkill:*)",
      "Bash(DANGEROUSLY_OMIT_AUTH=true npx @modelcontextprotocol/inspector build/index.js)",
      "Bash(chmod:*)",
      "Bash(node:*)",
      "Bash(ls:*)",
      "Bash(./build/index.js --help 2 >& 1)",
      "Bash(npm link:*)",
      "mcp__brutal-critique__pragmatic_review",
      "Bash(rm:*)",
      "Bash(npm test)",
      "Bash(git checkout:*)",
      "Bash(git add:*)",
      "Bash(npx husky:*)",
      "Bash(touch:*)",
      "Bash(./setup-hooks.sh:*)",
      "Bash(npm run:*)",
      "Bash(NODE_OPTIONS=--experimental-vm-modules npm test -- --passWithNoTests)",
      "Bash(grep:*)",
      "Bash(git commit:*)",
      "mcp__brutal-critique__explore_codebase",
      "mcp__brutal-critique__brutal_plan",
      "Bash(sed:*)",
      "Bash(xxd:*)",
      "Bash(awk:*)",
      "Bash(mv:*)",
      "Bash(rg:*)",
      "Bash(cp:*)",
      "Bash(mkdir:*)",
      "Bash(find:*)",
      "Bash(npx tsc:*)",
      "Bash(npx tsx:*)",
      "Bash(git reset:*)",
      "WebFetch(domain:scottspence.com)",
      "Bash(timeout:*)",
      "mcp__critical-claude__cc_plan_timeline",
      "mcp__critical-claude__cc_crit_explore",
      "mcp__critical-claude__cc_mvp_plan",
      "mcp__critical-claude__cc_system_design_analyze",
      "mcp__critical-claude__cc_data_flow_diagram",
      "mcp__critical-claude__cc_crit_code",
      "WebFetch(domain:github.com)",
      "Bash(claude auth status)",
      "Bash(cc:*)",
      "Bash(npm unlink:*)",
      "Bash(npx build-in-public-bot:*)",
      "mcp__critical-claude__cc_data_flow_analyze",
      "mcp__critical-claude__cc_data_flow_trace",
      "mcp__critical-claude__cc_crit_arch",
      "mcp__critical-claude__cc_plan_arch",
      "Bash(/Users/Cody/code_projects/critical_claude/packages/backlog-integration/dist/cli/cc-main.js --help)",
      "Bash(/Users/Cody/code_projects/critical_claude/critical-claude-sync-hook.sh)",
      "Bash(CC_PERFORMANCE_LOG=true node src/cli/cc-main.ts task --help)",
      "Bash(CC_PERFORMANCE_LOG=true node src/cli/cc-main.ts sync-claude-code --status)",
      "Bash(/Users/Cody/code_projects/critical_claude/cc monitor)",
      "Bash(/Users/Cody/code_projects/critical_claude/node_modules/.bin/electron dist/monitor/electron-main.js)",
      "Bash(/usr/local/bin/npm run build)",
      "Bash(./demo-summary.sh:*)",
      "Bash(for pkg in code-critique data-flow project-management prompt-management system-design web-search)",
      "Bash(do sed -i '' 's/\"\"test\"\": \"\"jest\"\"/\"\"test\"\": \"\"jest --passWithNoTests\"\"/' /Users/Cody/code_projects/critical_claude/packages/$pkg/package.json)",
      "Bash(done)",
      "Bash(npm test:*)",
      "Bash(npx jest:*)",
      "Bash(NODE_OPTIONS=\"--loader ts-node/esm\" npx jest src/__tests__/integration/backlog-manager.integration.test.ts --verbose)",
      "Bash(CC_HOOK_EVENT=PostToolUse CC_HOOK_TOOL=Edit CC_HOOK_FILE=/Users/Cody/test.ts node dist/cli/cc-main.js sync-claude-code --execute)",
      "Bash(CC_HOOK_EVENT=PostToolUse CC_HOOK_TOOL=Write CC_HOOK_FILE=/Users/Cody/test-implementation.ts node dist/cli/cc-main.js sync-claude-code --execute --direction both)",
      "Bash(./cleanup-redundant-files.sh:*)",
      "Bash(./dist/cli/cc-main.js task-ui)",
      "Bash(reset)",
      "Bash(cat:*)",
      "Bash(./test-persistent-ui.sh:*)",
      "Bash(./test-hooks-final.sh:*)",
      "Bash(./test-real-claude-hooks.sh:*)",
      "Bash(export CLAUDE_HOOK_TOOL=\"Test\")",
      "Bash(~/.critical-claude/universal-sync-hook.sh:*)",
      "Bash(./verify-hook-integration.sh:*)",
      "Bash(ln:*)",
      "Bash(alias cc-test=\"node /Users/Cody/code_projects/critical_claude/packages/backlog-integration/dist/cli/unified-cc-router.js\")",
      "Bash(echo:*)",
      "Bash(/Users/Cody/.claude/test-hook.sh:*)",
      "Bash(vitest run:*)",
      "WebFetch(domain:docs.cursor.com)",
      "WebFetch(domain:zed.dev)",
      "WebFetch(domain:modelcontextprotocol.io)",
      "Bash(git push:*)",
      "Bash(gh pr create:*)",
      "Bash(gh pr merge:*)",
      "Bash(gh pr:*)",
      "Bash(git pull:*)",
      "Bash(./bin/cc.js:*)",
      "Bash(npm:*)",
      "Bash(critical-claude:*)"
    ],
    "deny": []
  }
}