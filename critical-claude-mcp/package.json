{
  "name": "critical-claude-mcp",
  "version": "1.0.0",
  "description": "Critical Claude - Battle-hardened code review and planning system",
  "private": true,
  "type": "module",
  "bin": {
    "critical-claude-mcp": "./build/index.js"
  },
  "files": [
    "build"
  ],
  "scripts": {
    "build": "tsc && node -e \"require('fs').chmodSync('build/index.js', '755')\"",
    "prepare": "husky",
    "watch": "tsc --watch",
    "inspector": "npx @modelcontextprotocol/inspector build/index.js",
    "start": "node server.js",
    "dev": "npm run build && npm run start",
    "serve": "node build/index.js",
    "test": "NODE_OPTIONS=--experimental-vm-modules jest",
    "test:watch": "NODE_OPTIONS=--experimental-vm-modules jest --watch",
    "test:coverage": "NODE_OPTIONS=--experimental-vm-modules jest --coverage",
    "lint": "eslint src/**/*.ts",
    "lint:fix": "eslint src/**/*.ts --fix",
    "format": "prettier --write \"src/**/*.{ts,js,json,md}\"",
    "format:check": "prettier --check \"src/**/*.{ts,js,json,md}\"",
    "typecheck": "tsc --noEmit",
    "docs": "typedoc --out docs src/index.ts",
    "pre-commit": "lint-staged",
    "pre-commit:all": "npm run typecheck && npm run lint && npm run format:check && npm test -- --passWithNoTests"
  },
  "dependencies": {
    "@critical-claude/data-flow": "file:../packages/data-flow",
    "@critical-claude/system-design": "file:../packages/system-design",
    "@iarna/toml": "^2.2.5",
    "@modelcontextprotocol/sdk": "0.6.0",
    "@types/uuid": "^10.0.0",
    "uuid": "^11.1.0"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@types/jest": "^29.5.12",
    "@types/marked": "^5.0.2",
    "@types/node": "^20.11.24",
    "@typescript-eslint/eslint-plugin": "^7.0.0",
    "@typescript-eslint/parser": "^7.0.0",
    "eslint": "^8.57.0",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "lint-staged": "^16.1.2",
    "prettier": "^3.6.2",
    "ts-jest": "^29.1.2",
    "typedoc": "^0.28.7",
    "typescript": "^5.3.3"
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{js,jsx,json,md}": [
      "prettier --write"
    ]
  }
}
