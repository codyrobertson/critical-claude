# Full-Stack Web Application Template
[metadata]
name = "webapp"
description = "Full-stack web application with frontend, backend, and database"
version = "1.0.0"
difficulty = "intermediate"
estimated_weeks = 4
team_size = 3
tags = ["web", "fullstack", "frontend", "backend", "database"]

[variables]
project_name = "myapp"
framework = "react"
backend = "node"
database = "postgres"
auth_type = "jwt"
use_typescript = true

[phases]
setup = "Project Setup & Architecture"
core = "Core Features Implementation"
polish = "Testing, Documentation & Deployment"

[tasks]

[[tasks.setup]]
title = "Setup {{framework}} project with {{backend}} backend"
description = "Initialize project structure, configure build tools, and setup development environment"
priority = "critical"
labels = ["setup", "architecture"]
phase = "setup"
story_points = 3
estimated_hours = 5

[[tasks.setup]]
title = "Configure {{database}} database and ORM"
description = "Setup database connection, create schemas, and configure ORM/query builder"
priority = "high"
labels = ["database", "backend", "setup"]
phase = "setup"
story_points = 3
estimated_hours = 4
dependencies = ["setup-1"]

[[tasks.setup]]
title = "Implement {{auth_type}} authentication system"
description = "Create authentication middleware, user models, and auth endpoints"
priority = "critical"
labels = ["auth", "security", "backend"]
phase = "setup"
story_points = 5
estimated_hours = 8
dependencies = ["setup-2"]

[[tasks.core]]
title = "Design and implement data models"
description = "Create core business entities, relationships, and validation rules"
priority = "high"
labels = ["database", "backend", "architecture"]
phase = "core"
story_points = 5
estimated_hours = 8
dependencies = ["setup-2"]

[[tasks.core]]
title = "Build RESTful API endpoints"
description = "Implement CRUD operations, business logic, and API documentation"
priority = "high"
labels = ["api", "backend"]
phase = "core"
story_points = 8
estimated_hours = 12
dependencies = ["core-1", "setup-3"]

[[tasks.core]]
title = "Create {{framework}} component library"
description = "Build reusable UI components with proper styling and accessibility"
priority = "medium"
labels = ["frontend", "ui", "components"]
phase = "core"
story_points = 5
estimated_hours = 8
dependencies = ["setup-1"]

[[tasks.core]]
title = "Implement state management"
description = "Setup global state management solution and data flow architecture"
priority = "high"
labels = ["frontend", "architecture", "state"]
phase = "core"
story_points = 3
estimated_hours = 5
dependencies = ["core-3"]

[[tasks.core]]
title = "Build user interface screens"
description = "Create main application screens with routing and navigation"
priority = "high"
labels = ["frontend", "ui", "routing"]
phase = "core"
story_points = 8
estimated_hours = 12
dependencies = ["core-3", "core-4"]

[[tasks.polish]]
title = "Write comprehensive tests"
description = "Unit tests, integration tests, and E2E test coverage"
priority = "high"
labels = ["testing", "quality"]
phase = "polish"
story_points = 5
estimated_hours = 8
dependencies = ["core-2", "core-5"]

[[tasks.polish]]
title = "Create documentation"
description = "API docs, setup guide, architecture docs, and user manual"
priority = "medium"
labels = ["documentation"]
phase = "polish"
story_points = 3
estimated_hours = 5
dependencies = ["polish-1"]

[[tasks.polish]]
title = "Setup CI/CD pipeline"
description = "Configure automated testing, building, and deployment workflows"
priority = "high"
labels = ["devops", "deployment", "automation"]
phase = "polish"
story_points = 3
estimated_hours = 5
dependencies = ["polish-1"]