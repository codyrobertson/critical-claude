# AI Testing Results Viewer Configuration
events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Log format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    server {
        listen 80;
        server_name localhost;
        
        # Root directory for test results
        root /usr/share/nginx/html;
        index index.html index.htm;
        
        # Enable directory listing for browsing results
        location /results/ {
            autoindex on;
            autoindex_exact_size off;
            autoindex_format html;
            autoindex_localtime on;
            
            # Custom styling for directory listing
            add_before_body /nginx-style.html;
        }
        
        # Serve markdown files as text
        location ~ \.md$ {
            add_header Content-Type text/plain;
        }
        
        # Serve JSON files with proper content type
        location ~ \.json$ {
            add_header Content-Type application/json;
        }
        
        # Serve log files as text
        location ~ \.log$ {
            add_header Content-Type text/plain;
        }
        
        # Default location
        location / {
            try_files $uri $uri/ /results/;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}